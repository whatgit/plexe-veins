[General]
cmdenv-express-mode = true
cmdenv-autoflush = true
cmdenv-status-frequency = 10s
num-rngs = 6

ned-path = .
network = scenario

##########################################################
#            Simulation parameters                       #
##########################################################
debug-on-errors = true
print-undisposed = true

*.playgroundSizeX = 65000m
*.playgroundSizeY = 25000m
*.playgroundSizeZ = 50m

#let our modules decide when to stop the simulation
sim-time-limit = 1e6 s

**.debug = false
**.coreDebug = false

##########################################################
# Annotation parameters                                  #
##########################################################
*.annotations.draw = false

##########################################################
# Obstacle parameters                                    #
##########################################################
*.obstacles.debug = false

##########################################################
#            WorldUtility parameters                     #
##########################################################
*.world.useTorus = false
*.world.use2D = false

##########################################################
#            TraCIScenarioManager parameters             #
##########################################################
*.manager.updateInterval = 0.01s
*.manager.host = "localhost"
*.manager.moduleType = "Car"
*.manager.moduleName = "node"
*.manager.moduleDisplayString = ""
*.manager.autoShutdown = true
*.manager.margin = 25

##########################################################
#            11p specific parameters                     #
#                                                        #
#                    NIC-Settings                        #
##########################################################
*.connectionManager.sendDirect = true
*.connectionManager.maxInterfDist = 2600m
*.connectionManager.drawMaxIntfDist = false

*.**.nic.mac1609_4.useServiceChannel = false

*.**.nic.mac1609_4.txPower = 100mW
*.**.nic.mac1609_4.bitrate = 6Mbps

*.**.nic.phy80211p.sensitivity = -94dBm
*.**.nic.phy80211p.maxTXPower = 100mW
*.**.nic.phy80211p.useThermalNoise = true
*.**.nic.phy80211p.thermalNoise = -95dBm
*.**.nic.phy80211p.decider = xmldoc("config.xml")
*.**.nic.phy80211p.analogueModels = xmldoc("config.xml")
*.**.nic.phy80211p.usePropagationDelay = true

##########################################################
#                      Mobility                          #
##########################################################
*.node[*].mobility.x = 0
*.node[*].mobility.y = 0
*.node[*].mobility.z = 1.895


##########################################################
#                    Seeds and PRNGs                     #
##########################################################
seed-set = ${repetition}
**.seed = ${repetition}

*.node[*].unicast.rng-0 = 1
*.node[*].prot.rng-0 = 2
*.node[*].appl.rng-0 = 3
*.node[*].scenario.rng-0 = 4
**.traffic.rng-0 = 5

#launch config. tells Veins which SUMO configuration to run
*.manager.configFile = "./sumocfg/intersection.sumo.cfg"
#launch command. change sumo-gui with sumo depending on what you want to launch
*.manager.commandLine = "sumo-gui --remote-port $port --seed $seed --configuration-file $configFile"

##########################################################
#                   Common parameters                    #
##########################################################

**.numberOfCars = ${nCars = 1}
**.numberOfCarsPerPlatoon = ${platoonSize = 1}
**.numberOfLanes = ${nLanes = 1}
**.numberOfManualCars = ${nCarsManual = 1}


##########################################################
#                    Position helper                     #
##########################################################

*.node[*].helper_type = "PositionHelper"
*.node[*].helper.nLanes = ${nLanes}
*.node[*].helper.platoonSize = ${platoonSize}
*.node[*].helper.nCars = ${nCars}

##########################################################
#               Scenario common parameters               #
##########################################################

#controller and engine related parameters
*.node[*].scenario.caccC1 = 0.5
*.node[*].scenario.caccXi = 1
*.node[*].scenario.caccOmegaN = 0.2 Hz
*.node[*].scenario.caccSpacing = ${CACCgap=15}
*.node[*].scenario.engineTau = 0.5 s
*.node[*].scenario.ploegH = ${ploegH = 0.5}s
*.node[*].scenario.ploegKp = 0.2
*.node[*].scenario.ploegKd = 0.7
*.node[*].scenario.useRealisticEngine = false

*.node[*].scenario.gcdcKP1 = 0.872
*.node[*].scenario.gcdcKP2 = 0.29497
*.node[*].scenario.gcdcKI2 = 0
*.node[*].scenario.gcdcKP3 = 0.4981
*.node[*].scenario.gcdcAlpha = 0.3
*.node[*].scenario.gcdcBeta = 30
*.node[*].scenario.gcdcDesiredGap = 20



#controllers to be tested
**.numericController = ${controller = 0, 0, 1, 2, 3, 4}
*.node[*].scenario.controller = ${sController = "ACC", "ACC", "CACC", "PLOEG", "CONSENSUS", "HH_GCDC" ! controller}

#headway for ACCs
**.headway = ${headway = 0.3, 1.2, 0.1, 0.1, 0.1, 0.1 ! controller}s
*.node[*].scenario.accHeadway = ${headway}s
*.node[*].scenario.leaderHeadway = ${leaderHeadway = 1.2}s

#average leader speed
*.node[*].scenario.leaderSpeed = ${leaderSpeed = 5}kmph

##########################################################
#                      Application                       #
##########################################################

#Select the application to use below under each configuration

#enable statistics recording for the application
*.node[*].appl.*.scalar-recording = true
*.node[*].appl.*.vector-recording = true
#collect data for time
*.node[*].appl.simulationDuration = 180 s

##########################################################
#                Communication protocols                 #
##########################################################

#*.node[*].protocol_type = "SimplePlatooningBeaconing"
#*.node[*].protocol_type = "PlatoonMergingProtocol"
*.node[*].protocol_type = "IntersectionProtocol"

#enable statistics recording for the network layer
*.node[*].prot.*.scalar-recording = true
*.node[*].prot.*.vector-recording = true
#set the beaconing interval to be 0.1s
*.node[*].prot.beaconingInterval = ${beaconInterval = 0.1}s
#access category for platooning beacons
*.node[*].prot.priority = ${priority = 4}
#packet size for platooning beacon
*.node[*].prot.packetSize = ${packetSize = 200}
#via wireless send acceleration computed by the controller, not the actual one
*.node[*].prot.useControllerAcceleration = true
#set to 0 the packet loss rate for the unicast protocol
*.node[*].unicast.packetLossRate = 0

##########################################################
#                    Traffic manager                     #
##########################################################

#**.traffic_type = "PlatoonsTrafficManager"
**.traffic_type = "PlatoonsAdvancedTrafficManager"
#insert platooning vehicles at time
**.traffic.platoonInsertTime = 0.1 s
#insert platooning vehicles with a speed of
**.traffic.platoonInsertSpeed = ${leaderSpeed}kmph
#insert nCars platooning vehicles
**.traffic.nCars = ${nCars}
#let platoonSize cars per platoon
**.traffic.platoonSize = ${platoonSize}
#use nLanes lanes
**.traffic.nLanes = ${nLanes}
#SUMO vtype for platooning vehicles
**.traffic.platooningVType = "platoon_vehicle"
#insert vehicles already at steady-state. distance depends on controller
**.traffic.platoonInsertDistance = ${2, 2, 10, 10, 15, 30 ! controller}m
**.traffic.platoonInsertHeadway = ${0.3, 1.2, 0, 0.5, 0.8, 0 ! controller}s
**.traffic.platoonLeaderHeadway = ${leaderHeadway}s

**.traffic.nManualCars = ${nCarsManual}
**.traffic.laneManualCars = 1

**.traffic.platoonRoute = "platooning_route"


##########################################################
#                    Driving Simulator                   #
##########################################################
*.manager.useDrivingSimulator = true
*.manager.IPDS = "194.47.15.48"

#disable statistics recording for all other modules
**.scalar-recording = true
**.vector-recording = true

##########################################################

[Config Sinusoidal]
*.node[*].appl_type = "SimplePlatooningApp"

repeat = 1

#use the sinusoidal scenario
*.node[*].scenario_type = "SinusoidalScenario"

#make the leader accelerate and decelerate with a sinusoidal trend. set to 0 for constant speed
*.node[*].scenario.leaderOscillationFrequency = 0.2 Hz
*.node[*].scenario.oscillationAmplitude = 10 kmph
*.node[*].scenario.startOscillating = 5 s

output-vector-file = ${resultdir}/${configname}_${controller}_${headway}_${repetition}.vec
output-scalar-file = ${resultdir}/${configname}_${controller}_${headway}_${repetition}.sca

##########################################################
[Config Braking]
*.node[*].appl_type = "SimplePlatooningApp"

repeat = 1

#use the braking scenario
*.node[*].scenario_type = "BrakingScenario"

#make the leader decelerate with a certain deceleration
*.node[*].scenario.leaderOscillationFrequency = 0.2 Hz
*.node[*].scenario.brakingDeceleration = 8 mpsps
*.node[*].scenario.startBraking = 5 s


output-vector-file = ${resultdir}/${configname}_${controller}_${headway}_${repetition}.vec
output-scalar-file = ${resultdir}/${configname}_${controller}_${headway}_${repetition}.sca

##########################################################
[Config PlatoonMerging]
*.node[*].appl_type = "PlatoonMergingApp"

repeat = 1

*.node[*].scenario_type = "PlatoonMergingScenario"

*.node[*].appl.caccSpacing = ${CACCgap}
*.node[*].appl.ploegH = ${ploegH}
*.node[*].appl.gapKp = 2
*.node[*].appl.safeGap = 15

output-vector-file = ${resultdir}/${configname}_${controller}_${headway}_${repetition}.vec
output-scalar-file = ${resultdir}/${configname}_${controller}_${headway}_${repetition}.sca

##########################################################
[Config ManualDriving]
*.node[*].appl_type = "ManualDrivingApp"

repeat = 1

*.node[*].scenario_type = "ManualDrivingScenario"

*.node[*].appl.IP_DS = "194.47.15.48"

output-vector-file = ${resultdir}/${configname}_${controller}_${headway}_${repetition}.vec
output-scalar-file = ${resultdir}/${configname}_${controller}_${headway}_${repetition}.sca

##########################################################
[Config Intersection]
*.node[*].appl_type = "IntersectionApp"

repeat = 1

*.node[*].scenario_type = "IntersectionScenario"

*.node[*].appl.IP_DS = "194.47.15.48"

output-vector-file = ${resultdir}/${configname}_${controller}_${headway}_${repetition}.vec
output-scalar-file = ${resultdir}/${configname}_${controller}_${headway}_${repetition}.sca

##########################################################
[Config StandstillObstacle]

*.node[*].appl_type = "SimplePlatooningApp"

repeat = 1

#use the braking scenario
*.node[*].scenario_type = "StandstillObstacleScenario"

#make the leader decelerate with a certain deceleration
*.node[*].scenario.startAccelerating = 1.1 s
*.node[*].scenario.acceleration = 1 mpsps
*.node[*].scenario.startBraking = 30 s
*.node[*].scenario.notification_d = ${dist = 150}

output-vector-file = ${resultdir}/${configname}_${controller}_${headway}_${dist}.vec
output-scalar-file = ${resultdir}/${configname}_${controller}_${headway}_${dist}.sca

##########################################################
[Config SinusoidalNoGui]
extends = Sinusoidal
*.manager.commandLine = "sumo --remote-port $port --seed $seed --configuration-file $configFile"
#force the config name in the output file to be the same as for the gui experiment
output-vector-file = ${resultdir}/Sinusoidal_${controller}_${headway}_${repetition}.vec
output-scalar-file = ${resultdir}/Sinusoidal_${controller}_${headway}_${repetition}.sca

##########################################################
[Config BrakingNoGui]
extends = Braking
*.manager.commandLine = "sumo --remote-port $port --seed $seed --configuration-file $configFile"
#force the config name in the output file to be the same as for the gui experiment
output-vector-file = ${resultdir}/Braking_${controller}_${headway}_${repetition}.vec
output-scalar-file = ${resultdir}/Braking_${controller}_${headway}_${repetition}.sca
